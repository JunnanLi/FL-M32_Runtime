
Allocating common symbols
Common symbol       size              file

timer_irq_count     0x4               obj/main.o
recv_cnt            0x4               obj/main.o
dma_recv_cnt        0x4               obj/main.o
dma_send_cnt        0x4               obj/main.o
send_cnt            0x4               obj/main.o

Memory Configuration

Name             Origin             Length             Attributes
ram              0x0000000000000000 0x0000000000010000 axrwl
ram_data         0x0000000000010000 0x0000000000010000 axrwl
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

                0x0000000000000180                PROVIDE (__boot_address, 0x180)
                0x0000000000001000                __stack_size = DEFINED (__stack_size)?__stack_size:0x1000
                [!provide]                        PROVIDE (__stack_size, __stack_size)

.vectors        0x0000000000000000      0x100
                0x0000000000000000                PROVIDE (__vector_start, .)
 *(.vectors)
 .vectors       0x0000000000000000      0x100 obj/vectors.o

.init           0x0000000000000180       0x28
 *(SORT(.init))
 *(.text.start)
 .text.start    0x0000000000000180       0x28 obj/crt0.o
                0x0000000000000180                _start

.text           0x00000000000001a8     0x89ce
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 .text.startup  0x00000000000001a8       0x2a obj/main.o
                0x00000000000001a8                main
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x00000000000001d2      0x28c obj/riscv_test.o
                0x00000000000001d2                __TEST_RV32UI_ISA
                0x00000000000001e6                lui_ret
                0x00000000000001ee                auipc_ret
                0x00000000000001f6                j_ret
                0x00000000000001fe                jal_ret
                0x0000000000000206                jalr_ret
                0x000000000000020e                beq_ret
                0x0000000000000216                bne_ret
                0x000000000000021e                blt_ret
                0x0000000000000226                bge_ret
                0x000000000000022e                bltu_ret
                0x0000000000000236                bgeu_ret
                0x000000000000023e                lb_ret
                0x0000000000000246                lh_ret
                0x000000000000024e                lw_ret
                0x0000000000000256                lbu_ret
                0x000000000000025e                lhu_ret
                0x0000000000000266                sb_ret
                0x000000000000026e                sh_ret
                0x0000000000000276                sw_ret
                0x000000000000027e                addi_ret
                0x0000000000000286                slti_ret
                0x000000000000028e                xori_ret
                0x0000000000000296                ori_ret
                0x000000000000029e                andi_ret
                0x00000000000002a6                slli_ret
                0x00000000000002ae                srli_ret
                0x00000000000002b6                srai_ret
                0x00000000000002be                add_ret
                0x00000000000002c6                sub_ret
                0x00000000000002ce                sll_ret
                0x00000000000002d6                slt_ret
                0x00000000000002de                xor_ret
                0x00000000000002e6                srl_ret
                0x00000000000002ee                sra_ret
                0x00000000000002f6                or_ret
                0x00000000000002fe                and_ret
                0x0000000000000306                simple_ret
                0x0000000000000314                __TEST_RV32UM_ISA
                0x0000000000000328                mulh_ret
                0x0000000000000330                mulhsu_ret
                0x0000000000000338                mulhu_ret
                0x0000000000000340                mul_ret
                0x0000000000000348                div_ret
                0x0000000000000350                divu_ret
                0x0000000000000358                rem_ret
                0x0000000000000360                remu_ret
 .text          0x000000000000045e      0x48e obj/or.o
                0x000000000000045e                or
 .text          0x00000000000008ec      0x488 obj/xor.o
                0x00000000000008ec                xor
 .text          0x0000000000000d74      0x460 obj/sh.o
                0x0000000000000d74                sh
 .text          0x00000000000011d4      0x1ea obj/andi.o
                0x00000000000011d4                andi
 .text          0x00000000000013be      0x3ec obj/sub.o
                0x00000000000013be                sub
 .text          0x00000000000017aa      0x4a4 obj/sll.o
                0x00000000000017aa                sll
 .text          0x0000000000001c4e      0x258 obj/lb.o
                0x0000000000001c4e                lb
 .text          0x0000000000001ea6      0x28a obj/lh.o
                0x0000000000001ea6                lh
 .text          0x0000000000002130      0x2a2 obj/bge.o
                0x0000000000002130                bge
 .text          0x00000000000023d2      0x2ce obj/srai.o
                0x00000000000023d2                srai
 .text          0x00000000000026a0      0x2c8 obj/bltu.o
                0x00000000000026a0                bltu
 .text          0x0000000000002968      0x512 obj/sra.o
                0x0000000000002968                sra
 .text          0x0000000000002e7a      0x2cc obj/srli.o
                0x0000000000002e7a                srli
 .text          0x0000000000003146      0x254 obj/beq.o
                0x0000000000003146                beq
 *fill*         0x000000000000339a        0x6 
 .text          0x00000000000033a0       0xc4 obj/auipc.o
                0x00000000000033a0                auipc
 .text          0x0000000000003464      0x43e obj/sw.o
                0x0000000000003464                sw
 .text          0x00000000000038a2      0x19c obj/jalr.o
                0x00000000000038a2                jalr
 .text          0x0000000000003a3e      0x31a obj/bgeu.o
                0x0000000000003a3e                bgeu
 .text          0x0000000000003d58      0x218 obj/xori.o
                0x0000000000003d58                xori
 .text          0x0000000000003f70      0x2aa obj/lw.o
                0x0000000000003f70                lw
 .text          0x000000000000421a      0x52e obj/srl.o
                0x000000000000421a                srl
 .text          0x0000000000004748      0x406 obj/add.o
                0x0000000000004748                add
 .text          0x0000000000004b4e      0x3d8 obj/slt.o
                0x0000000000004b4e                slt
 .text          0x0000000000004f26      0x258 obj/lbu.o
                0x0000000000004f26                lbu
 .text          0x000000000000517e      0x29e obj/lhu.o
                0x000000000000517e                lhu
 .text          0x000000000000541c       0x5a obj/simple.o
                0x000000000000541c                simple
 .text          0x0000000000005476      0x254 obj/blt.o
                0x0000000000005476                blt
 .text          0x00000000000056ca      0x47c obj/and.o
                0x00000000000056ca                and
 .text          0x0000000000005b46      0x210 obj/ori.o
                0x0000000000005b46                ori
 .text          0x0000000000005d56       0xd0 obj/lui.o
                0x0000000000005d56                lui
 .text          0x0000000000005e26       0xf4 obj/jal.o
                0x0000000000005e26                jal
 .text          0x0000000000005f1a      0x274 obj/addi.o
                0x0000000000005f1a                addi
 .text          0x000000000000618e      0x3c2 obj/sb.o
                0x000000000000618e                sb
 .text          0x0000000000006550      0x27c obj/slli.o
                0x0000000000006550                slli
 .text          0x00000000000067cc      0x258 obj/bne.o
                0x00000000000067cc                bne
 .text          0x0000000000006a24       0xa2 obj/j.o
                0x0000000000006a24                j
 .text          0x0000000000006ac6      0x248 obj/slti.o
                0x0000000000006ac6                slti
 .text          0x0000000000006d0e      0x462 obj/mulhu.o
                0x0000000000006d0e                mulhu
 .text          0x0000000000007170      0x11e obj/div.o
                0x0000000000007170                div
 .text          0x000000000000728e      0x122 obj/divu.o
                0x000000000000728e                divu
 .text          0x00000000000073b0      0x11e obj/remu.o
                0x00000000000073b0                remu
 .text          0x00000000000074ce      0x45e obj/mulh.o
                0x00000000000074ce                mulh
 .text          0x000000000000792c      0x418 obj/mul.o
                0x000000000000792c                mul
 .text          0x0000000000007d44      0x11c obj/rem.o
                0x0000000000007d44                rem
 .text          0x0000000000007e60      0x464 obj/mulhsu.o
                0x0000000000007e60                mulhsu
 .text          0x00000000000082c4        0x0 obj/main.o
 .text          0x00000000000082c4      0x426 obj/system.o
                0x00000000000082c4                print_chr
                0x00000000000082cc                print_str
                0x00000000000082de                print_dec
                0x0000000000008314                print_hex
                0x0000000000008448                print_void
                0x000000000000844a                printf
                0x0000000000008468                sys_gettime
                0x000000000000847a                time
                0x0000000000008480                insn
                0x0000000000008486                memcpy
                0x000000000000849e                memset
                0x00000000000084b0                memcmp
                0x00000000000084d4                memmove
                0x0000000000008514                strnlen
                0x000000000000852e                strlen
                0x0000000000008540                strcpy
                0x00000000000085ba                strcmp
                0x0000000000008664                strncmp
                0x0000000000008692                atoi
 .text          0x00000000000086ea       0xe8 obj/irq.o
                0x00000000000086ea                uart_echo
                0x0000000000008726                uart_irq_handler
                0x0000000000008728                dma_irq_handler
                0x0000000000008748                time_irq_handler
                0x0000000000008760                irq_puts
                0x000000000000876c                mstatus_enable
                0x000000000000878e                mstatus_disable
                0x00000000000087b4                irq_init
 .text          0x00000000000087d2       0x5a obj/netif.o
                0x00000000000087d2                rv_recv
                0x000000000000880a                rv_send
 .text          0x000000000000882c        0x0 obj/custom_ops.o
 .text          0x000000000000882c        0x0 obj/crt0.o
 .text          0x000000000000882c        0x0 obj/vectors.o
 .text.vecs     0x000000000000882c      0x1e0 obj/vectors.o
 .text          0x0000000000008a0c      0x16a obj/pktProc.o
                0x0000000000008a0c                __test_custom_instr
                0x0000000000008a92                __to_recv_pkt
                0x0000000000008aa4                __test_proc_pkt
                0x0000000000008ab2                __test_replace_mac
                0x0000000000008ae4                __add_next_512b_first32b_with_1
                0x0000000000008b16                __to_send_pkt
                0x0000000000008b30                __test_send_pkt
                0x0000000000008b3e                __read_type
                0x0000000000008b48                __read_next_512b_first32b
 *(.gnu.warning)
                [!provide]                        PROVIDE (__etext, .)
                [!provide]                        PROVIDE (_etext, .)
                [!provide]                        PROVIDE (etext, .)

.rodata         0x0000000000010000      0x11c
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata.str1.4
                0x0000000000010000       0x2c obj/main.o
 .rodata.str1.4
                0x000000000001002c       0x11 obj/system.o
 *fill*         0x000000000001003d        0x3 
 .rodata.str1.4
                0x0000000000010040       0x1c obj/irq.o
 .rodata        0x000000000001005c       0xc0 obj/vectors.o

.rela.dyn       0x000000000001011c        0x0
 .rela.text     0x000000000001011c        0x0 obj/riscv_test.o
 .rela.text.startup
                0x000000000001011c        0x0 obj/riscv_test.o
 .rela.text.start
                0x000000000001011c        0x0 obj/riscv_test.o

.rodata1
 *(.rodata1)
                0x000000000001111c                . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE))

.data           0x000000000001011c      0x188
                0x000000000001011c                __DATA_BEGIN__ = .
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x000000000001011c        0x0 obj/riscv_test.o
 .data          0x000000000001011c        0x4 obj/or.o
                0x000000000001011c                or_data
 .data          0x0000000000010120        0x4 obj/xor.o
                0x0000000000010120                xor_data
 .data          0x0000000000010124       0x18 obj/sh.o
                0x0000000000010124                sh_data
 .data          0x000000000001013c        0x8 obj/andi.o
                0x000000000001013c                andi_data
 .data          0x0000000000010144        0x4 obj/sub.o
                0x0000000000010144                sub_data
 .data          0x0000000000010148        0x4 obj/sll.o
                0x0000000000010148                sll_data
 .data          0x000000000001014c        0x8 obj/lb.o
                0x000000000001014c                lb_data
 .data          0x0000000000010154        0xc obj/lh.o
                0x0000000000010154                lh_data
 .data          0x0000000000010160        0x4 obj/bge.o
                0x0000000000010160                bge_data
 .data          0x0000000000010164        0x8 obj/srai.o
                0x0000000000010164                srai_data
 .data          0x000000000001016c        0x8 obj/bltu.o
                0x000000000001016c                bltu_data
 .data          0x0000000000010174        0x4 obj/sra.o
                0x0000000000010174                sra_data
 .data          0x0000000000010178        0x8 obj/srli.o
                0x0000000000010178                srli_data
 .data          0x0000000000010180        0x4 obj/beq.o
                0x0000000000010180                beq_data
 .data          0x0000000000010184        0x8 obj/auipc.o
                0x0000000000010184                auipc_data
 .data          0x000000000001018c       0x2c obj/sw.o
                0x000000000001018c                sw_data
 .data          0x00000000000101b8        0x8 obj/jalr.o
                0x00000000000101b8                jalr_data
 .data          0x00000000000101c0        0x8 obj/bgeu.o
                0x00000000000101c0                bgeu_data
 .data          0x00000000000101c8        0x8 obj/xori.o
                0x00000000000101c8                xori_data
 .data          0x00000000000101d0       0x14 obj/lw.o
                0x00000000000101d0                lw_data
 .data          0x00000000000101e4        0x4 obj/srl.o
                0x00000000000101e4                srl_data
 .data          0x00000000000101e8        0x4 obj/add.o
                0x00000000000101e8                add_data
 .data          0x00000000000101ec        0x4 obj/slt.o
                0x00000000000101ec                slt_data
 .data          0x00000000000101f0        0x8 obj/lbu.o
                0x00000000000101f0                lbu_data
 .data          0x00000000000101f8        0xc obj/lhu.o
                0x00000000000101f8                lhu_data
 .data          0x0000000000010204        0x8 obj/simple.o
                0x0000000000010204                simple_data
 .data          0x000000000001020c        0x4 obj/blt.o
                0x000000000001020c                blt_data
 .data          0x0000000000010210        0x4 obj/and.o
                0x0000000000010210                and_data
 .data          0x0000000000010214        0x4 obj/ori.o
                0x0000000000010214                ori_data
 .data          0x0000000000010218        0x4 obj/lui.o
                0x0000000000010218                lui_data
 .data          0x000000000001021c        0x4 obj/jal.o
                0x000000000001021c                jal_data
 .data          0x0000000000010220        0x8 obj/addi.o
                0x0000000000010220                addi_data
 .data          0x0000000000010228        0xe obj/sb.o
                0x0000000000010228                sb_data
 *fill*         0x0000000000010236        0x2 
 .data          0x0000000000010238        0x8 obj/slli.o
                0x0000000000010238                slli_data
 .data          0x0000000000010240        0x4 obj/bne.o
                0x0000000000010240                bne_data
 .data          0x0000000000010244        0x4 obj/j.o
                0x0000000000010244                j_data
 .data          0x0000000000010248        0x8 obj/slti.o
                0x0000000000010248                slti_data
 .data          0x0000000000010250        0x8 obj/mulhu.o
                0x0000000000010250                mulhu_data
 .data          0x0000000000010258        0x4 obj/div.o
                0x0000000000010258                div_data
 .data          0x000000000001025c        0x8 obj/divu.o
                0x000000000001025c                divu_data
 .data          0x0000000000010264        0x8 obj/remu.o
                0x0000000000010264                remu_data
 .data          0x000000000001026c        0x8 obj/mulh.o
                0x000000000001026c                mulh_data
 .data          0x0000000000010274        0x4 obj/mul.o
                0x0000000000010274                mul_data
 .data          0x0000000000010278        0x4 obj/rem.o
                0x0000000000010278                rem_data
 .data          0x000000000001027c        0x8 obj/mulhsu.o
                0x000000000001027c                mulhsu_data
 .data          0x0000000000010284        0x0 obj/main.o
 .data          0x0000000000010284        0x0 obj/system.o
 .data          0x0000000000010284        0x0 obj/irq.o
 .data          0x0000000000010284       0x20 obj/netif.o
                0x0000000000010284                meta_buffer_send
 .data          0x00000000000102a4        0x0 obj/custom_ops.o
 .data          0x00000000000102a4        0x0 obj/crt0.o
 .data          0x00000000000102a4        0x0 obj/vectors.o
 .data          0x00000000000102a4        0x0 obj/pktProc.o

.sdata          0x00000000000102a4        0x0
                0x00000000000102a4                __SDATA_BEGIN__ = .
 *(.srodata.cst16)
 *(.srodata.cst8)
 *(.srodata.cst4)
 *(.srodata.cst2)
 *(.srodata .srodata.*)
 *(.sdata .sdata.* .gnu.linkonce.s.*)
                0x00000000000102a4                _edata = .
                [!provide]                        PROVIDE (edata, .)
                0x00000000000102a4                . = .
                0x00000000000102a4                __bss_start = .

.sbss           0x00000000000102a4        0x8
 *(.dynsbss)
 *(.sbss .sbss.* .gnu.linkonce.sb.*)
 .sbss          0x00000000000102a4        0x8 obj/irq.o
                0x00000000000102a4                mmstatus
                0x00000000000102a8                ie_mask32_std
 *(.scommon)

.bss            0x00000000000102ac       0x34
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000000000102ac        0x0 obj/riscv_test.o
 .bss           0x00000000000102ac        0x0 obj/or.o
 .bss           0x00000000000102ac        0x0 obj/xor.o
 .bss           0x00000000000102ac        0x0 obj/sh.o
 .bss           0x00000000000102ac        0x0 obj/andi.o
 .bss           0x00000000000102ac        0x0 obj/sub.o
 .bss           0x00000000000102ac        0x0 obj/sll.o
 .bss           0x00000000000102ac        0x0 obj/lb.o
 .bss           0x00000000000102ac        0x0 obj/lh.o
 .bss           0x00000000000102ac        0x0 obj/bge.o
 .bss           0x00000000000102ac        0x0 obj/srai.o
 .bss           0x00000000000102ac        0x0 obj/bltu.o
 .bss           0x00000000000102ac        0x0 obj/sra.o
 .bss           0x00000000000102ac        0x0 obj/srli.o
 .bss           0x00000000000102ac        0x0 obj/beq.o
 .bss           0x00000000000102ac        0x0 obj/auipc.o
 .bss           0x00000000000102ac        0x0 obj/sw.o
 .bss           0x00000000000102ac        0x0 obj/jalr.o
 .bss           0x00000000000102ac        0x0 obj/bgeu.o
 .bss           0x00000000000102ac        0x0 obj/xori.o
 .bss           0x00000000000102ac        0x0 obj/lw.o
 .bss           0x00000000000102ac        0x0 obj/srl.o
 .bss           0x00000000000102ac        0x0 obj/add.o
 .bss           0x00000000000102ac        0x0 obj/slt.o
 .bss           0x00000000000102ac        0x0 obj/lbu.o
 .bss           0x00000000000102ac        0x0 obj/lhu.o
 .bss           0x00000000000102ac        0x0 obj/simple.o
 .bss           0x00000000000102ac        0x0 obj/blt.o
 .bss           0x00000000000102ac        0x0 obj/and.o
 .bss           0x00000000000102ac        0x0 obj/ori.o
 .bss           0x00000000000102ac        0x0 obj/lui.o
 .bss           0x00000000000102ac        0x0 obj/jal.o
 .bss           0x00000000000102ac        0x0 obj/addi.o
 .bss           0x00000000000102ac        0x0 obj/sb.o
 .bss           0x00000000000102ac        0x0 obj/slli.o
 .bss           0x00000000000102ac        0x0 obj/bne.o
 .bss           0x00000000000102ac        0x0 obj/j.o
 .bss           0x00000000000102ac        0x0 obj/slti.o
 .bss           0x00000000000102ac        0x0 obj/mulhu.o
 .bss           0x00000000000102ac        0x0 obj/div.o
 .bss           0x00000000000102ac        0x0 obj/divu.o
 .bss           0x00000000000102ac        0x0 obj/remu.o
 .bss           0x00000000000102ac        0x0 obj/mulh.o
 .bss           0x00000000000102ac        0x0 obj/mul.o
 .bss           0x00000000000102ac        0x0 obj/rem.o
 .bss           0x00000000000102ac        0x0 obj/mulhsu.o
 .bss           0x00000000000102ac        0x0 obj/main.o
 .bss           0x00000000000102ac        0x0 obj/system.o
 .bss           0x00000000000102ac        0x0 obj/irq.o
 .bss           0x00000000000102ac       0x20 obj/netif.o
                0x00000000000102ac                meta_buffer
 .bss           0x00000000000102cc        0x0 obj/custom_ops.o
 .bss           0x00000000000102cc        0x0 obj/crt0.o
 .bss           0x00000000000102cc        0x0 obj/vectors.o
 .bss           0x00000000000102cc        0x0 obj/pktProc.o
 *(COMMON)
 COMMON         0x00000000000102cc       0x14 obj/main.o
                0x00000000000102cc                timer_irq_count
                0x00000000000102d0                recv_cnt
                0x00000000000102d4                dma_recv_cnt
                0x00000000000102d8                dma_send_cnt
                0x00000000000102dc                send_cnt
                0x00000000000102e0                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x00000000000102e0                . = ALIGN (0x4)
                0x00000000000102e0                . = SEGMENT_START ("ldata-segment", .)
                0x00000000000102e0                . = ALIGN (0x4)
                0x00000000000102e0                __BSS_END__ = .
                0x00000000000102e0                __bss_end = .
                0x000000000001091c                __global_pointer$ = MIN ((__SDATA_BEGIN__ + 0x800), MAX ((__DATA_BEGIN__ + 0x800), (__BSS_END__ - 0x800)))
                0x00000000000102e0                _end = .
                [!provide]                        PROVIDE (end, .)
                0x00000000000102e0                . = DATA_SEGMENT_END (.)

.stack          0x00000000000102e0     0x1000
                [!provide]                        PROVIDE (__stack_start, .)
                0x0000000000001000                . = __stack_size
 *fill*         0x00000000000102e0     0x1000 
                0x00000000000112e0                PROVIDE (_sp, .)
                [!provide]                        PROVIDE (__stack_end, .)
LOAD obj/riscv_test.o
LOAD obj/or.o
LOAD obj/xor.o
LOAD obj/sh.o
LOAD obj/andi.o
LOAD obj/sub.o
LOAD obj/sll.o
LOAD obj/lb.o
LOAD obj/lh.o
LOAD obj/bge.o
LOAD obj/srai.o
LOAD obj/bltu.o
LOAD obj/sra.o
LOAD obj/srli.o
LOAD obj/beq.o
LOAD obj/auipc.o
LOAD obj/sw.o
LOAD obj/jalr.o
LOAD obj/bgeu.o
LOAD obj/xori.o
LOAD obj/lw.o
LOAD obj/srl.o
LOAD obj/add.o
LOAD obj/slt.o
LOAD obj/lbu.o
LOAD obj/lhu.o
LOAD obj/simple.o
LOAD obj/blt.o
LOAD obj/and.o
LOAD obj/ori.o
LOAD obj/lui.o
LOAD obj/jal.o
LOAD obj/addi.o
LOAD obj/sb.o
LOAD obj/slli.o
LOAD obj/bne.o
LOAD obj/j.o
LOAD obj/slti.o
LOAD obj/mulhu.o
LOAD obj/div.o
LOAD obj/divu.o
LOAD obj/remu.o
LOAD obj/mulh.o
LOAD obj/mul.o
LOAD obj/rem.o
LOAD obj/mulhsu.o
LOAD obj/main.o
LOAD obj/system.o
LOAD obj/irq.o
LOAD obj/netif.o
LOAD obj/custom_ops.o
LOAD obj/crt0.o
LOAD obj/vectors.o
LOAD obj/pktProc.o
LOAD /home/lijunnan/Documents/2-software/v1.0.16-pulp-riscv-gcc-ubuntu-18/bin/../lib/gcc/riscv32-unknown-elf/7.1.1/libgcc.a
OUTPUT(obj/firmware.elf elf32-littleriscv)

.Pulp_Chip.Info
                0x0000000000000000       0x4e
 .Pulp_Chip.Info
                0x0000000000000000       0x4e obj/riscv_test.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/or.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/xor.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/sh.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/andi.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/sub.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/sll.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/lb.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/lh.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/bge.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/srai.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/bltu.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/sra.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/srli.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/beq.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/auipc.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/sw.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/jalr.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/bgeu.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/xori.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/lw.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/srl.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/add.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/slt.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/lbu.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/lhu.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/simple.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/blt.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/and.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/ori.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/lui.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/jal.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/addi.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/sb.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/slli.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/bne.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/j.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/slti.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/mulhu.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/div.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/divu.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/remu.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/mulh.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/mul.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/rem.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/mulhsu.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/main.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/system.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/irq.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/netif.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/custom_ops.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/crt0.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/vectors.o
 .Pulp_Chip.Info
                0x000000000000004e        0x0 obj/pktProc.o

.comment        0x0000000000000000       0x1a
 .comment       0x0000000000000000       0x1a obj/main.o
                                         0x1b (size before relaxing)
 .comment       0x000000000000001a       0x1b obj/system.o
 .comment       0x000000000000001a       0x1b obj/irq.o
 .comment       0x000000000000001a       0x1b obj/netif.o
